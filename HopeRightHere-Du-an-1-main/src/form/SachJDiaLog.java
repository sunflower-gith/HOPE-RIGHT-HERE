/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import dao.DanhMucSachDAO;
import dao.SachDAO;
import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import phuongtien.Auth;
import phuongtien.MsgBox;
import phuongtien.XDate;
import phuongtien.XImage;
import thucthe.DanhMucSach;
import thucthe.Sach;

/**
 *
 * @author Thanh Lam
 */
public class SachJDiaLog extends javax.swing.JDialog {

    DanhMucSachDAO dmsdao = new DanhMucSachDAO();
    SachDAO sachdao = new SachDAO();
    int row = 0;
    JFileChooser fileChooser = new JFileChooser();

    /**
     * Creates new form SachJDiaLog
     */
    public SachJDiaLog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tabSach = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        lblBiaSach = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTacGia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNhaXuatBan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGiaTienNhap = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtGiaTienBan = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtSoTrang = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNgayXuatBan = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtMaLoaiSach = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        cboDanhMucSach = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HOPE - QUẢN LÝ SÁCH");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51), 5));
        jPanel1.setToolTipText("");

        tabSach.setBackground(new java.awt.Color(0, 153, 153));
        tabSach.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        tabSach.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        lblBiaSach.setBackground(new java.awt.Color(255, 255, 255));
        lblBiaSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblBiaSach.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBiaSach.setText("Bìa sách");
        lblBiaSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        lblBiaSach.setOpaque(true);
        lblBiaSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBiaSachMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tên sách: ");

        txtTenSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTenSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tác giả :");

        txtTacGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTacGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nhà xuất bản :");

        txtNhaXuatBan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNhaXuatBan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Số lượng :");

        txtSoLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSoLuong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Giá tiền nhập :");

        txtGiaTienNhap.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGiaTienNhap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Giá tiền bán  :");

        txtGiaTienBan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGiaTienBan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        btnThem.setBackground(new java.awt.Color(255, 153, 51));
        btnThem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinhanh/add_48px.png"))); // NOI18N
        btnThem.setText("Thêm ");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 153, 51));
        btnXoa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinhanh/delete_40px.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 153, 51));
        btnSua.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinhanh/update_48px.png"))); // NOI18N
        btnSua.setText("Cập nhật");
        btnSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(255, 153, 51));
        btnLamMoi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinhanh/refresh_48px.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Số trang :");

        txtSoTrang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSoTrang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        txtMoTa.setColumns(20);
        txtMoTa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMoTa.setRows(5);
        txtMoTa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jScrollPane2.setViewportView(txtMoTa);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Mô tả :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Ngày xuất bản :");

        txtNgayXuatBan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNgayXuatBan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã loại sách  :");

        txtMaLoaiSach.setEditable(false);
        txtMaLoaiSach.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaLoaiSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblBiaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenSach, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                                    .addComponent(txtMaLoaiSach)
                                    .addComponent(txtTacGia)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtGiaTienNhap)
                                        .addGap(17, 17, 17)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtGiaTienBan, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSoLuong)
                                            .addComponent(txtNhaXuatBan))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtSoTrang)
                                            .addComponent(txtNgayXuatBan, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblBiaSach, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMaLoaiSach, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgayXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGiaTienBan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(txtGiaTienNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnThem))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tabSach.addTab("Thông tin sách", new javax.swing.ImageIcon(getClass().getResource("/hinhanh/information_48px.png")), jPanel2); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        btnTimKiem.setBackground(new java.awt.Color(255, 153, 51));
        btnTimKiem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinhanh/search_48px.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        txtTimKiem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTimKiem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTimKiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51), 3));
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });

        tblSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        tblSach.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MÃ SÁCH", " MÃ LOẠI SÁCH", "TÊN SÁCH", "TÁC GIẢ", "NXB", "Ngày XB", "SỐ LƯỢNG", "SỐ TRANG", "GIÁ TIỀN NHẬP", "GIÁ TIỀN BÁN", "BÌA SÁCH", "MÃ NV"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSach.setRowHeight(30);
        tblSach.setSelectionBackground(new java.awt.Color(0, 166, 245));
        tblSach.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblSachMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(164, 164, 164))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabSach.addTab("Tài nguyên sách", new javax.swing.ImageIcon(getClass().getResource("/hinhanh/book_40px.png")), jPanel3); // NOI18N

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        cboDanhMucSach.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cboDanhMucSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDanhMucSachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboDanhMucSach, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboDanhMucSach, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabSach)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabSach)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboDanhMucSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDanhMucSachActionPerformed
        chonLoaiSach();
    }//GEN-LAST:event_cboDanhMucSachActionPerformed

    private void tblSachMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMousePressed
        if (evt.getClickCount() == 2) {
            this.row = tblSach.rowAtPoint(evt.getPoint());
            edit();
        }
    }//GEN-LAST:event_tblSachMousePressed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void lblBiaSachMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBiaSachMousePressed
        if (evt.getClickCount() == 2) {
            chonAnh();
        }
    }//GEN-LAST:event_lblBiaSachMousePressed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        timKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
       this.fillTable();
    }//GEN-LAST:event_txtTimKiemKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SachJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SachJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SachJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SachJDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SachJDiaLog dialog = new SachJDiaLog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void init() {
        setSize(1000, 680);
        setLocationRelativeTo(null);
        this.setIconImage(XImage.getLogo());
        this.fillComboBoxDanhMucSach();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboDanhMucSach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBiaSach;
    private javax.swing.JTabbedPane tabSach;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtGiaTienBan;
    private javax.swing.JTextField txtGiaTienNhap;
    private javax.swing.JTextField txtMaLoaiSach;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNgayXuatBan;
    private javax.swing.JTextField txtNhaXuatBan;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtSoTrang;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void fillComboBoxDanhMucSach() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboDanhMucSach.getModel();
        model.removeAllElements();
        try {
            List<DanhMucSach> list = dmsdao.selectAll();
            for (DanhMucSach dms : list) {
                model.addElement(dms);
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu !  ");
        }
    }

    private void chonLoaiSach() {
        DanhMucSach dms = (DanhMucSach) cboDanhMucSach.getSelectedItem();
        txtMaLoaiSach.setText(dms.getMaLoaiSach());
        this.fillTable();
        this.row = -1;
        this.updateStatus();
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();
            DanhMucSach dms = (DanhMucSach) cboDanhMucSach.getSelectedItem();
            List<Sach> list = sachdao.selectByLoaiSach(dms.getMaLoaiSach(), keyword);
            for (Sach s : list) {
                Object[] row = {
                    s.getMaSach(),
                    s.getMaLoaiSach(),
                    s.getTenSach(),
                    s.getTacGia(),
                    s.getNhaXuatBan(),
                    s.getNgayXuatBan(),
                    s.getSoLuong(),
                    s.getSoTrang(),
                    String.format("%.0f", s.getGiaNhap())+" đ",
                    String.format("%.0f", s.getGiaBan())+" đ",
                    s.getHinh(),
                    s.getMaNhanVien()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu !");
        }
    }

    private void edit() {
        try {
            int maSach = (int) tblSach.getValueAt(row, 0);
            Sach s = sachdao.selectById(maSach);
            if (s != null) {
                setForm(s);
                updateStatus();
                tabSach.setSelectedIndex(0);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu !");
        }
    }

    private void setForm(Sach model) {
        txtMaLoaiSach.setText(model.getMaLoaiSach());
        txtTenSach.setText(model.getTenSach());
        txtTacGia.setText(model.getTacGia());
        txtNhaXuatBan.setText(model.getNhaXuatBan());
        Date d = model.getNgayXuatBan();
        if (d != null) {
            txtNgayXuatBan.setText(XDate.toString(model.getNgayXuatBan(), "dd-MM-yyyy"));
        } else {
            txtNgayXuatBan.setText("");
        }
        txtSoLuong.setText(String.valueOf(model.getSoLuong()));
        txtSoTrang.setText(String.valueOf(model.getSoTrang()));
        txtGiaTienNhap.setText(String.valueOf(model.getGiaNhap()));
        txtGiaTienBan.setText(String.valueOf(model.getGiaBan()));
        txtMoTa.setText(model.getMoTa());
        String hinh = model.getHinh() + "";
        if (!hinh.equals("null")) {
            lblBiaSach.setIcon(XImage.readBiaSach(model.getHinh()));
            lblBiaSach.setToolTipText(model.getHinh());
        }
    }

    private void updateStatus() {
        boolean edit = this.row >= 0;
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
    }

    private void insert() {
        if (validateForm() == true) {
            Sach model = getForm();
            try {
                sachdao.insert(model);
                this.fillTable();
                this.clearForm();
                MsgBox.alertSuccessful(this, "Thêm sách thành công !");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm sách thất bại !");
            }
        } else {
            MsgBox.alert(this, "Vui lòng điền đầy đủ thông tin !");
        }
    }

    private boolean validateForm() {
        if (txtTenSach.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập tên sách !");
            txtTenSach.setBackground(Color.red);
            return false;  
        }else{
            txtTenSach.setBackground(Color.white);
                }
        
        if (txtTacGia.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập tên tác giả !");
            txtTacGia.setBackground(Color.red);
            return false;  
        }else{
            txtTacGia.setBackground(Color.white);
                }
        
        if (txtNhaXuatBan.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập nhà xuất bản !");
            txtNhaXuatBan.setBackground(Color.red);
            return false;  
        }else{
            txtNhaXuatBan.setBackground(Color.white);
                }
        
        if (txtNgayXuatBan.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập ngày xuất bản !");
            txtNgayXuatBan.setBackground(Color.red);
            return false;  
        }else{
            txtNgayXuatBan.setBackground(Color.white);
                }
        
        if (txtSoLuong.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập số lượng sách !");
            return false;
        }
        if (txtSoTrang.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập số trang !");
           txtSoTrang.setBackground(Color.red);
            return false;  
        }else{
            txtSoTrang.setBackground(Color.white);
                }
        
        if (txtGiaTienNhap.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập giá tiền nhập !");
            txtGiaTienNhap.setBackground(Color.red);
            return false;  
        }else{
            txtGiaTienNhap.setBackground(Color.white);
                }
        
        if (txtGiaTienBan.getText().equals("")) {
            MsgBox.alert(this, "Bạn chưa nhập giá tiền bán !");
            txtGiaTienBan.setBackground(Color.red);
            return false;  
        }else{
            txtGiaTienBan.setBackground(Color.white);
                }
        
        Pattern pattern = Pattern.compile("^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$");
        Matcher matcher = pattern.matcher(txtNgayXuatBan.getText());
        if (!matcher.find()) {
            MsgBox.alert(this, "Ngày tháng năm không hợp lệ !");
            txtNgayXuatBan.setBackground(Color.red);
            return false;
        }
        try {
            double soLuong = Double.parseDouble(txtSoLuong.getText());
            if (soLuong < 0) {
                MsgBox.alert(this, "Số lượng không được âm !");
                txtSoLuong.setBackground(Color.red);
                return false;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Số lượng phải là số !");
            txtSoLuong.setBackground(Color.red);
            return false;
        }
        try {
            double soTrang = Double.parseDouble(txtSoTrang.getText());
            if (soTrang <= 0) {
                MsgBox.alert(this, "Số trang phải lớn hơn 0 !");
                txtSoTrang.setBackground(Color.red);
                return false;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Số trang phải là số !");
            txtSoTrang.setBackground(Color.red);
            return false;
        }
        try {
            double giaTienNhap = Double.parseDouble(txtGiaTienNhap.getText());
            if (giaTienNhap < 0) {
                MsgBox.alert(this, "Giá tiền không được âm !");
                txtGiaTienNhap.setBackground(Color.red);
                return false;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Giá tiền phải là số !");
            txtGiaTienNhap.setBackground(Color.red);
            return false;
        }
        try {
            double giaTienBan = Double.parseDouble(txtGiaTienBan.getText());
            if (giaTienBan < 0) {
                MsgBox.alert(this, "Giá tiền không được âm !");
                txtGiaTienBan.setBackground(Color.red);
                return false;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Giá tiền phải là số !");
            txtGiaTienBan.setBackground(Color.red);
            return false;
        }
        
        return true;
        
    }

    private Sach getForm() {
        Sach model = new Sach();
        model.setMaLoaiSach(txtMaLoaiSach.getText());
        model.setTenSach(txtTenSach.getText());
        model.setTacGia(txtTacGia.getText());
        model.setNhaXuatBan(txtNhaXuatBan.getText());
        model.setNgayXuatBan(XDate.toDate(txtNgayXuatBan.getText(), "dd-MM-yyyy"));
        model.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        model.setSoTrang(Integer.parseInt(txtSoTrang.getText()));
        model.setGiaBan(Double.parseDouble(txtGiaTienBan.getText()));
        model.setGiaNhap(Double.parseDouble(txtGiaTienNhap.getText()));
        model.setMaNhanVien(Auth.user.getMaNhanVien());
        model.setHinh(lblBiaSach.getToolTipText());
        model.setMoTa(txtMoTa.getText());
        return model;
    }

    private void clearForm() {
        this.setForm(new Sach());
        this.updateStatus();
        row = - 1;
        updateStatus();
        lblBiaSach.setIcon(null);
    }

    private void chonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.saveBiaSach(file);
            ImageIcon icon = XImage.readBiaSach(file.getName());
            lblBiaSach.setIcon(icon);
            lblBiaSach.setToolTipText(file.getName());
        }
    }

    private void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa sách !");
        } else {
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa quyển sách này ?")){
            int makh = (int) tblSach.getValueAt(row, 0);
            try {
                sachdao.delete(makh);
                this.fillTable();
                this.clearForm();
                MsgBox.alertSuccessful(this, "Sách đã bị xóa !");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa sách thất bại !");
            }
            }
        }
    }

    private void update() {
        if (validateForm() == true) {// ở đây dùng luôn validateform vì mã sách là int tăng tự động nên trong validateform không cần check trùng
            Sach model = getForm();
            try {
                model.setMaSach((int) tblSach.getValueAt(row, 0));
                sachdao.update(model);
                this.fillTable();
                MsgBox.alertSuccessful(this, "Cập nhật sách thành công !");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật sách thất bại !");
            }
        }else{
            MsgBox.alert(this, "Vui lòng điền đầy đủ thông tin !");
        }
    }

    private void timKiem() {
        this.fillTable();
        this.clearForm();
        this.row = -1;
        updateStatus();
    }
}
